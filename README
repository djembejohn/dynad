// Copyright 2016 John Bryden

// This file is part of Dynad.
//    Dynad is free software: you can redistribute it and/or modify it
//    under the terms of the GNU Affero General Public License as
//    published by the Free Software Foundation, either version 3 of
//    the License, or (at your option) any later version.

//    Dynad is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.

//    You should have received a copy of the GNU Affero General Public License
//    along with Dynad.  If not, see <http://www.gnu.org/licenses/>.

Dynad
=====

Dynad is a Dynamic Additive synthesiser. It generates sounds by adding
lots of waveforms to each other. These waveforms are generally sine
waves, but that can also be changed. It is still very much in
development, so it's a bit peculiar to my way of working.

Compilation
===========

To get this to compile (hopefully) the following will work.

You will need a version of g++ that is recent enough to support c++11.

You will need STK (synthesis toolkit), jack, and cmake installed.

STK is at https://ccrma.stanford.edu/software/stk/

In file CMakeLists.txt, update 
include_directories("~/Software/stk/include")
and
link_libraries("~/Software/stk/src/libstk.a")
to point to where you put STK.

In a terminal type
cmake .
and then
make

Good luck!


Basic usage
===========

When it starts choose a midi in from the list. It should then play on
that midi in.

It expects 4 cores to run on, sorry, I should add an option to change
this. It won't work so well with less cores.

To load a param file type
l <param file>

To save
s <param file>

To create a new polyphonic synth on a midi channel
n <channel num> <num partials> <num phones>

(for now only put 16 in the <num partials> entry, as there are some bugs)

m <param file> <param file>
Load morphing parameters from the two param files

If using the BCR2000 type a channel number to make that channel the
one being edited.

BCR2000 editing
===============

The bottom right four buttons select the mode.

Top left button = partials 1-8
Top right button = partials 9-16
Bottom left button = Synth settings
Bottom right button = More settings (not used yet)

I might jig this around a bit so it can accommodate more/less partials.

* Partial mode

There are 16 knobs available to edit each partial.

The two buttons can be used to change which parameters are affected by
the four knobs. It starts at 1-4 (see below). Pressing down (top light
on ) will edit 5-8. Pressing down again (bottom light on) will edit
9-12. Pressing down again (both lights on) will edit 13-16. Pressing
up will go in the opposite direction.

::No lights on
Knob 1, Parameter 1 - Frequency (I was planning to implement pushing to fine tune)
Knob 2, Parameter 2 - Level
Knob 3, Parameter 3 - Noise
Knob 4, Parameter 4 - Unused (Will be pan eventually probably)

::Top light on
Knob 1, Parameter 5 - Unused                              _   _
Knob 2, Parameter 6 - Squareness (makes the wave squarer   |_| |_| )
Knob 3, Parameter 7 - Sawness (makes the wave saw shaped |\|\|\)
Knob 4, Parameter 8 - Distortion (flatens the wave)

:: Bottom light on
Knob 1, Parameter 9 - tremolo freq
Knob 2, Parameter 10 - tremolo level
Knob 3, Parameter 11 - vibrato freq
Knob 4, Parameter 12 - vibrato level

:: Both lights on is currently unused
Knob 1, Parameter 13
Knob 2, Parameter 14 
Knob 3, Parameter 15
Knob 4, Parameter 16

* Synth settings

Column 1 (General)
Knob 1 - Volume
Knob 2 - Pan
Knob 3 - Distortion
Knob 4 - Morph (Changes between the two parameters loaded, possibly a bit experimental and buggy though)

Column 2 (Envelope)
Knob 1 - Attack
Knob 2 - Decay
Knob 3 - Sustain
Knob 4 - Release

Column 3 (Normal sweep - adds a normal distribution to the partials)
Knob 1 - Amount (positive for now)
Knob 2 - Frequency
Knob 3 - Width
Knob 4 - Random noise

Column 4 (Other things)
Knob 1 - Warp the frequencies (Adds a value to each partial frequency)
Knob 2 - 
Knob 3 - Poisson sweep: amount 
Knob 4 - Poisson sweep: frequency

Column 5 (nothing at the moment, I was thinking of making it so that it edits all partials together en masse and using the two buttons) 
Knob 1 - 
Knob 2 - 
Knob 3 -
Knob 4 -

Column 6 Chorus
Knob 1 - Dry/wet
Knob 2 - Osc freq
Knob 3 - Amount
Knob 4 -

Column 7 Delay
Knob 1 - Dry/wet
Knob 2 - Delay time
Knob 3 - Feedback
Knob 4 -

Column 8 Reverb
Knob 1 - Dry/wet
Knob 2 - Something
Knob 3 - Something else
Knob 4 - Maybe something else I can't remember





